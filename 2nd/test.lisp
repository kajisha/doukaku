(defparameter *stars*
  (list '(:star "A" :color "W")
        '(:star "B" :color "W")
        '(:star "C" :color "W")
        '(:star "D" :color "W")
        '(:star "E" :color "W")
        '(:star "F" :color "R")
        '(:star "G" :color "R")
        '(:star "H" :color "R")
        '(:star "I" :color "R")
        '(:star "J" :color "R")))

(defun string->list (str)
  (mapcar 'string (coerce str 'list)))

(defun list->string (lst)
  (coerce (mapcar 'character lst) 'string))

(defun name-of (star)
  (getf star :star))

(defun color-of (star)
  (getf star :color))

(defun flip-color (star)
  (setf (color-of star) (if (equal (color-of star) "R") "W" "R")))

(defun set-color (star color)
  (setf (color-of star) color))

(defun update-stars (star modifier)
  (setf *stars*
        (mapcar
          #'(lambda (s)
              (when (equal (name-of s) star)
                (modifier s))
              s) *stars*)))

(defun colors ()
  (list->string
    (mapcar #'(lambda (star) (color-of star))
            *stars*)))

(defun flip (routes &aux (current (car (string->list routes))) (remaining (cdr (string->list routes))))
  (update-star current flip-color)
  (if remaining
    (flip (list->string remaining))
    (colors)))

(defun test (inputs expected)
  (assert (equal (flip inputs) expected)))

;(test "A" "RWWWWRRRRR")
(test "F" "WWWWWWWRRW")
;(test "J" "WWWWWWRRWW")
;(test "AA" "WWWWWWWRWW")
;(test "IC" "WWRWWRRRWW")
;(test "FC" "WWRWWWWRRW")
;(test "AE" "RWWWRRRRRR")
;(test "GJ" "WWWWWWWWWW")
;(test "CCB" "WRWWWRWWWR")
;(test "BEF" "WRWWRWWRRR")
;(test "JGD" "WWWRWWWWWW")
;(test "IHCC" "WWWWWRWWWW")
;(test "AIDD" "RWWWWRRWWR")
;(test "IJFA" "RWWWWWWWWW")
;(test "ABCDE" "RRRRRRRRRR")
;(test "ICEBA" "RRRWRRRRRR")
;(test "DAHHD" "RWWWWRWWWR")
;(test "GJIJC" "WWRWWWWWRR")
;(test "FGHIJ" "WWWWWWWWRR")
;(test "HJICGA" "RWRWWRRRRR")
;(test "IBCIGC" "WRWWWWWWWW")
;(test "BIJJJB" "WWWWWWRWWW")
;(test "DCBCHGD" "WRWWWWWRRW")
;(test "JEABDHD" "RRWWRRRWRR")
;(test "JHFADHE" "RWWRRRRRWW")
;(test "HDGGDBIB" "WWWWWWWWWW")
;(test "IIDIHCCG" "WWWRWRRWWW")
;(test "BBFBICIE" "WRRWRRRWWW")
;(test "HJHCFBJGG" "WRRWWWWRRW")
;(test "AJJIEAAII" "RWWWRWWWWR")
;(test "AIDHJFGAE" "WWWRRWWWWW")
;(test "FGBGHCBHJJ" "WWRWWWWRRW")
;(test "EFIGIGGHHJ" "WWWWRRRWWR")
;(test "HGAFDIFFFF" "RWWRWRRRRW")
;(test "AABBCCDDEE" "WWWWWWWWWW")
;(test "ABCDEFGHIJ" "RRRRRWWWWW")
;(test "FGHIJABCDE" "RRRRRRRRRR")
